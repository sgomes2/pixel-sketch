const { SerialPort } = require('serialport');
const port = new SerialPort({ path: '/dev/ttyACM0', baudRate: 115200});

const testImage = [11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,5,0,5,0,5,0,5,0,5,0,5,0,0,11,11,0,0,5,0,5,0,5,0,5,0,5,0,5,0,11,11,0,5,0,5,0,5,0,5,0,5,0,5,0,0,11,11,0,0,5,0,5,0,5,0,5,0,5,0,5,0,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,14,14,5,14,5,14,5,14,5,14,5,14,5,14,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,14,14,5,14,5,14,5,14,5,14,5,14,5,14,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,0,0,5,0,5,0,5,0,5,0,5,0,5,0,11,11,0,5,0,5,0,5,0,5,0,5,0,5,0,0,11,11,0,0,5,0,5,0,5,0,5,0,5,0,5,0,11,11,0,5,0,5,0,5,0,5,0,5,0,5,0,0,11,11,0,0,5,0,5,0,5,0,5,0,5,0,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11]
// 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,2,0,0,0,0,0
console.log(testImage.toString());
const sleep = ms => new Promise(r => setTimeout(r, ms));

port.on('open', (err) => {
    if(err) {
        console.log("Open port is failed : ", err.message)
    }
    console.log('port open')

    setTimeout(drawImage, 5000);
})

const drawImage = () => {
    setTimeout(() => {
        port.write(testImage.slice(0, 128).toString());
    }, 1200);

    setTimeout(() => {
        port.write(testImage.slice(128).toString());
    }, 3000);
}



// Open errors will be emitted as an error event
port.on('error', function(err) {
    console.log('Error: ', err.message)
});
